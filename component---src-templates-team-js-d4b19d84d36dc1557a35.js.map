{"version":3,"file":"component---src-templates-team-js-d4b19d84d36dc1557a35.js","mappings":"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","sources":["webpack://inrome/./src/templates/team.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardImg.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://inrome/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\"\nimport { Row, Col, Container, Card } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Team = () => {\n  const data = useStaticQuery(graphql`\n    {\n      directus {\n        intro: cms_articles(\n          limit: 1\n          sort: \"order\"\n          filter: { slug: { _eq: \"team\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          text\n          tags\n          order\n        }\n\n        sns: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sns\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        sapienza: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sapienza\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        ait: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"ait\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        adb: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"adb\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <div>\n        <section className=\"py-5\">\n          <Container>\n            <Row>\n              <h1>{data.directus.intro[0].title}</h1>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: data.directus.intro[0].text,\n                }}\n              />\n            </Row>\n          </Container>\n        </section>\n\n        <section className=\"py-5 text-center\">\n          <Container>\n            <Row>\n              <h2>Scuola Normale Superiore</h2>\n              {data.directus.sns.map((person, index) => {\n                return (\n                  <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                    <Card>\n                      <GatsbyImage\n                        image={\n                          person.image.imageFile.childImageSharp.gatsbyImageData\n                        }\n                        alt={person.title}\n                      />\n                      <Card.Body\n                        style={{\n                          color: \"#ffffff\",\n                          backgroundColor: person.color ?? \"rgb(0, 90, 116)\",\n                        }}\n                        className={person.color}\n                      >\n                        <Card.Title className=\"border-bottom\">\n                          {person.title}\n                        </Card.Title>\n                        <Card.Text\n                          className=\"text-center\"\n                          dangerouslySetInnerHTML={{\n                            __html: person.summary.replace(\n                              /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                              \"$1<br />$2\"\n                            ),\n                          }}\n                        ></Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n            <Row>\n              <h2>Sapienza Universit√† di Roma</h2>\n              {data.directus.sapienza.map((person, index) => {\n                return (\n                  <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                    <Card>\n                      <GatsbyImage\n                        image={\n                          person.image.imageFile.childImageSharp.gatsbyImageData\n                        }\n                        alt={person.title}\n                      />\n                      <Card.Body\n                        style={{\n                          color: \"#ffffff\",\n                          backgroundColor: person.color ?? \"rgb(128, 36, 51)\",\n                        }}\n                        className={person.color}\n                      >\n                        <Card.Title className=\"border-bottom\">\n                          {person.title}\n                        </Card.Title>\n                        <Card.Text\n                          className=\"text-center\"\n                          dangerouslySetInnerHTML={{\n                            __html: person.summary.replace(\n                              /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                              \"$1<br />$2\"\n                            ),\n                          }}\n                        ></Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n            <Row>\n              <h2>AIT Austrian Institute of Technology</h2>\n              {data.directus.ait.map((person, index) => {\n                return (\n                  <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                    <Card>\n                      <GatsbyImage\n                        image={\n                          person.image.imageFile.childImageSharp.gatsbyImageData\n                        }\n                        alt={person.title}\n                      />\n                      <Card.Body\n                        style={{\n                          color: \"#ffffff\",\n                          backgroundColor: person.color ?? \"rgb(187, 187, 187)\",\n                        }}\n                        className={person.color}\n                      >\n                        <Card.Title className=\"border-bottom\">\n                          {person.title}\n                        </Card.Title>\n                        <Card.Text\n                          className=\"text-center\"\n                          dangerouslySetInnerHTML={{\n                            __html: person.summary.replace(\n                              /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                              \"$1<br />$2\"\n                            ),\n                          }}\n                        ></Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n            <Row>\n              <h2>Advisory Board </h2>\n            </Row>\n          </Container>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Team\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Team","data","useStaticQuery","React","Layout","className","Container","Row","directus","intro","title","dangerouslySetInnerHTML","__html","text","sns","map","person","index","_person$color","Col","xs","lg","key","Card","GatsbyImage","image","imageFile","childImageSharp","gatsbyImageData","alt","Body","style","color","backgroundColor","Title","Text","summary","replace","sapienza","_person$color2","ait","_person$color3","CardImg","bsPrefix","variant","as","Component","props","ref","prefix","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","body","Object","assign","Img","Subtitle","Link","Header","Footer","ImgOverlay"],"sourceRoot":""}