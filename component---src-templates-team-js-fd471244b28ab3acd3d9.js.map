{"version":3,"file":"component---src-templates-team-js-fd471244b28ab3acd3d9.js","mappings":"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","sources":["webpack://inrome/./src/templates/team.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardBody.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardImg.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardLink.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardText.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://inrome/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\"\nimport { Row, Col, Container, Card } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\n\nconst Team = (currentLang, currentPath) => {\n  const data = useStaticQuery(graphql`\n    {\n      directus {\n        intro: cms_articles(\n          limit: 1\n          sort: \"order\"\n          filter: { slug: { _eq: \"team\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          text\n          tags\n          order\n        }\n\n        sns: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sns\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        sapienza: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sapienza\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        ait: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"ait\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        adb: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"adb\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Wrapper>\n        <div>\n          <section className=\"py-5\">\n            <Container>\n              <Row>\n                <h1>{data.directus.intro[0].title}</h1>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: data.directus.intro[0].text,\n                  }}\n                />\n              </Row>\n            </Container>\n          </section>\n\n          <section className=\"py-5 text-center\">\n            <Container>\n              <Row>\n                <h2>Scuola Normale Superiore</h2>\n                {data.directus.sns.map((person, index) => {\n                  return (\n                    <Col xs=\"12\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor:\n                              person.color ?? \"rgb(169, 158, 88)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>Sapienza Università di Roma</h2>\n                {data.directus.sapienza.map((person, index) => {\n                  return (\n                    <Col xs=\"12\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor: person.color ?? \"rgb(128, 36, 51)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>AIT Austrian Institute of Technology</h2>\n                {data.directus.ait.map((person, index) => {\n                  return (\n                    <Col xs=\"12\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor:\n                              person.color ?? \"rgb(187, 187, 187)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>Advisory Board</h2>\n                {data.directus.adb.map((person, index) => {\n                  return (\n                    <Col xs=\"12\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor:\n                              person.color ?? \"rgb(187, 187, 187)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n            </Container>\n          </section>\n        </div>\n      </Wrapper>\n    </Layout>\n  )\n}\n//style\nconst Wrapper = styled.section`\n  .card {\n    border-radius: 1rem;\n\n    &:hover img {\n      opacity: 0.7 !important;\n      transition: all 1s ease;\n    }\n\n    .card-title a {\n      color: #fff;\n      text-decoration: none;\n\n      &:hover {\n        color: #000;\n        text-decoration: none;\n      }\n    }\n\n    .card-link a {\n      color: #ffffff;\n      text-decoration: none\n      \n      &:hover {\n        color: #000;\n        text-decoration: none;\n      }\n    }\n  }\n`\n\nexport default Team\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Wrapper","styled","section","withConfig","displayName","componentId","Team","currentLang","currentPath","data","useStaticQuery","React","Layout","className","Container","Row","directus","intro","title","dangerouslySetInnerHTML","__html","text","sns","map","person","index","_person$color","Col","xs","lg","key","Card","GatsbyImage","image","imageFile","childImageSharp","gatsbyImageData","alt","Body","style","color","backgroundColor","Title","Link","to","slug","Text","fontSize","summary","replace","sapienza","_person$color2","ait","_person$color3","adb","_person$color4","CardBody","bsPrefix","as","Component","props","ref","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","border","body","Object","assign","Img","Subtitle","Header","Footer","ImgOverlay"],"sourceRoot":""}