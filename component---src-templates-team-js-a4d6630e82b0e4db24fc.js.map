{"version":3,"file":"component---src-templates-team-js-a4d6630e82b0e4db24fc.js","mappings":"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","sources":["webpack://inrome/./src/templates/team.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardImg.js","webpack://inrome/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://inrome/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\"\nimport { Row, Col, Container, Card } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\n\nconst Team = (currentLang, currentPath) => {\n  const data = useStaticQuery(graphql`\n    {\n      directus {\n        intro: cms_articles(\n          limit: 1\n          sort: \"order\"\n          filter: { slug: { _eq: \"team\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          text\n          tags\n          order\n        }\n\n        sns: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sns\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        sapienza: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"sapienza\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        ait: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"ait\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          order\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        adb: cms_articles(\n          sort: \"order\"\n          filter: { tags: { _contains: \"adb\" } }\n        ) {\n          id\n          title\n          slug\n          summary\n          tags\n          image {\n            id\n            imageFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Wrapper>\n        <div>\n          <section className=\"py-5\">\n            <Container>\n              <Row>\n                <h1>{data.directus.intro[0].title}</h1>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: data.directus.intro[0].text,\n                  }}\n                />\n              </Row>\n            </Container>\n          </section>\n\n          <section className=\"py-5 text-center\">\n            <Container>\n              <Row>\n                <h2>Scuola Normale Superiore</h2>\n                {data.directus.sns.map((person, index) => {\n                  return (\n                    <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor:\n                              person.color ?? \"rgb(169, 158, 88)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>Sapienza Universit√† di Roma</h2>\n                {data.directus.sapienza.map((person, index) => {\n                  return (\n                    <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor: person.color ?? \"rgb(128, 36, 51)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>AIT Austrian Institute of Technology</h2>\n                {data.directus.ait.map((person, index) => {\n                  return (\n                    <Col xs=\"6\" lg=\"3\" className=\"py-3\" key={index}>\n                      <Card>\n                        <GatsbyImage\n                          image={\n                            person.image.imageFile.childImageSharp\n                              .gatsbyImageData\n                          }\n                          alt={person.title}\n                        />\n                        <Card.Body\n                          style={{\n                            color: \"#ffffff\",\n                            backgroundColor:\n                              person.color ?? \"rgb(187, 187, 187)\",\n                          }}\n                          className={person.color}\n                        >\n                          <Card.Title className=\"border-bottom\">\n                            <Link\n                              className=\"card-link\"\n                              to={`/en/${person.slug}`}\n                            >\n                              {person.title}\n                            </Link>\n                          </Card.Title>\n                          <Card.Text\n                            className=\"text-center\"\n                            style={{\n                              fontSize: \"0.7rem\",\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: person.summary.replace(\n                                /([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\n                                \"$1<br />$2\",\n                              ),\n                            }}\n                          ></Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n                })}\n              </Row>\n              <Row>\n                <h2>Advisory Board </h2>\n              </Row>\n            </Container>\n          </section>\n        </div>\n      </Wrapper>\n    </Layout>\n  )\n}\n//style\nconst Wrapper = styled.section`\n  .card {\n    border-radius: 1rem;\n\n    &:hover img {\n      opacity: 0.7 !important;\n      transition: all 1s ease;\n    }\n\n    .card-title a {\n      color: #fff;\n      text-decoration: none;\n\n      &:hover {\n        color: #000;\n        text-decoration: none;\n      }\n    }\n\n    .card-link a {\n      color: #ffffff;\n      text-decoration: none\n      \n      &:hover {\n        color: #000;\n        text-decoration: none;\n      }\n    }\n  }\n`\n\nexport default Team\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Wrapper","styled","section","withConfig","displayName","componentId","Team","currentLang","currentPath","data","useStaticQuery","React","Layout","className","Container","Row","directus","intro","title","dangerouslySetInnerHTML","__html","text","sns","map","person","index","_person$color","Col","xs","lg","key","Card","GatsbyImage","image","imageFile","childImageSharp","gatsbyImageData","alt","Body","style","color","backgroundColor","Title","Link","to","slug","Text","fontSize","summary","replace","sapienza","_person$color2","ait","_person$color3","CardImg","bsPrefix","variant","as","Component","props","ref","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","body","Object","assign","Img","Subtitle","Header","Footer","ImgOverlay"],"sourceRoot":""}